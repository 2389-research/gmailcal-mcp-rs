name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  BINARY_NAME: mcp-gmailcal

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: create-release
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
            target: x86_64-unknown-linux-gnu
            binary_path: target/release/mcp-gmailcal
            asset_name: mcp-gmailcal-linux-x86_64.tar.gz
            use_cross: false
            strip: true
            
          - os: macos-latest
            platform: macos
            arch: x86_64
            target: x86_64-apple-darwin
            binary_path: target/release/mcp-gmailcal
            asset_name: mcp-gmailcal-macos-x86_64.tar.gz
            use_cross: false
            strip: true
            
          - os: macos-latest
            platform: macos
            arch: aarch64
            target: aarch64-apple-darwin
            binary_path: target/aarch64-apple-darwin/release/mcp-gmailcal
            asset_name: mcp-gmailcal-macos-aarch64.tar.gz
            use_cross: false
            strip: true
            
          - os: windows-latest
            platform: windows
            arch: x86_64
            target: x86_64-pc-windows-msvc
            binary_path: target/release/mcp-gmailcal.exe
            asset_name: mcp-gmailcal-windows-x86_64.zip
            use_cross: false
            strip: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}
      
      - name: Install Cross (if needed)
        if: matrix.use_cross
        run: cargo install cross
      
      - name: Build with Cargo
        if: "!matrix.use_cross"
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Build with Cross (if needed)
        if: matrix.use_cross
        run: cross build --release --target ${{ matrix.target }}
      
      - name: Strip binary (Unix)
        if: matrix.strip && (matrix.platform == 'linux' || matrix.platform == 'macos')
        run: strip ${{ matrix.binary_path }}
      
      - name: Bundle release assets (Unix)
        if: matrix.platform == 'linux' || matrix.platform == 'macos'
        run: |
          mkdir -p dist
          cp ${{ matrix.binary_path }} dist/${{ env.BINARY_NAME }}
          cd dist && tar -czf ${{ matrix.asset_name }} ${{ env.BINARY_NAME }}
      
      - name: Bundle release assets (Windows)
        if: matrix.platform == 'windows'
        shell: bash
        run: |
          mkdir -p dist
          cp ${{ matrix.binary_path }} dist/
          cd dist && 7z a -tzip ${{ matrix.asset_name }} ${{ env.BINARY_NAME }}.exe
      
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/${{ matrix.asset_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}